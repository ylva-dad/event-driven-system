name: Deploy Terraform

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - "infrastructure/**"

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.8.3

      - name: Set up Azure CLI
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Terraform init
        id: init
        working-directory: infrastructure
        run: terraform init

      - name: Terraform format check
        id: fmt
        working-directory: infrastructure
        run: terraform fmt -check

      - name: Terraform validate
        id: validate
        working-directory: infrastructure
        run: terraform validate

      
      - name: Terraform plan
        id: plan
        working-directory: infrastructure
        run: |
          output=$(terraform plan -no-color -input=false)
          echo "plan_output=$output" >> $GITHUB_ENV

      - name: Upload plan
        run: echo "# Plan Results\n```shell\n${{ env.plan_output }}\n```\n" > $GITHUB_STEP_SUMMARY

      # - name: Upload
      #   uses: actions/github-script@v6
      #   env:
      #     PLAN: "terraform\n${{steps.plan.outputs.plan_output }}"
      #   with:
      #     script: |

      #       const output = `#### Terraform Format and Style 🖌\`${{ steps.fmt.outcome }}\`
      #       #### Terraform Initialization ⚙️\`${{ steps.init.outcome }}\`
      #       #### Terraform Validation 🤖\`${{ steps.validate.outcome }}\`
      #       #### Terraform Plan 📖\`${{ steps.plan.outcome }}\`

      #       <details><summary>Show Plan</summary>
      #       \`\`\`\n
      #       ${process.env.PLAN}
      #       \`\`\`
      #       </details>
      #       *Pushed by: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;
      #       github.rest.workflows.createComment({
      #         issue_number: context.issue.number,
      #         owner: context.repo.owner,
      #         repo: context.repo.repo,
      #         body: output
      #       })

      - name: Terraform Plan Status Check
        if: steps.plan.outcome == 'failure'
        run: exit 1

      - name: Terraform apply
        working-directory: infrastructure
        run: terraform apply -auto-approve
